// Generated by CoffeeScript 1.6.3
(function() {
  var app, async, http, should, _;

  _ = require("underscore");

  should = require("should");

  async = require("async");

  app = require("../app");

  http = require("../test/support/http");

  describe('REST-Sessions Test', function() {
    before(function(done) {
      http.createServer(app, done);
    });
    after(function(done) {
      done();
    });
    it('PUT /rt/id/TestBucket/id123?score=100 should return 200', function(done) {
      http.request().put('/rt/id/TestBucket/id123?score=100').end(function(resp) {
        resp.statusCode.should.equal(200);
        console.log(resp.body);
        done();
      });
    });
    it('PUT /rt/id/TestBucket/id123?score=xyz should return 500', function(done) {
      http.request().put('/rt/id/TestBucket/id123?score=xyz').end(function(resp) {
        var result;
        resp.statusCode.should.equal(500);
        result = JSON.parse(resp.body);
        result.message.should.equal("Invalid score format");
        done();
      });
    });
    it('PUT /rt/id/TestBucket/id123?score=100&tags=["tag1","tag2","all"] should return 200 and true', function(done) {
      http.request().put('/rt/id/TestBucket/id123?score=100&tags=["tag1","tag2","all"]').end(function(resp) {
        resp.statusCode.should.equal(200);
        resp.body.should.equal("true");
        done();
      });
    });
    it('GET /rt/tags/TestBucket?tags=["all"]', function(done) {
      http.request().get('/rt/tags/TestBucket?tags=["all"]').end(function(resp) {
        var result;
        resp.statusCode.should.equal(200);
        result = JSON.parse(resp.body);
        result.total_items.should.equal(1);
        result.items[0].should.equal("id123");
        done();
      });
    });
    it('DELETE /rt/id/TestBucket/id123 should return 200 ', function(done) {
      http.request()["delete"]('/rt/id/TestBucket/id123').expect(200, done);
    });
  });

}).call(this);
